# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  BuildConfiguration: 'Release'

trigger:
- master

stages:
- stage: Build
  jobs:
  - job: BuildJob
    pool:
      name: Hosted VS2017
      demands:
      - msbuild
      - visualstudio
    steps:
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
        feedsToUse: 'select'
        versioningScheme: 'off'

    - task: DotNetCoreCLI@2
      displayName: Pack
      inputs:
        command: 'pack'
        configuration: '$(BuildConfiguration)'
        packagesToPack: '**/*.csproj'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
      condition: succeededOrFailed()
- stage: Publish
  jobs:
    # track deployments on the environment
  - deployment: Publish
    pool:
      name: Hosted VS2017
      demands:
      - msbuild
      - visualstudio
    # creates an environment if it doesnâ€™t exist
    environment: 'nuget-org-ClientCertAuth'
    strategy:
      # default deployment strategy
      runOnce:
        deploy:
          steps:
          - task: NuGetCommand@2
            displayName: 'NuGet push'
            inputs:
              command: push
              packagesToPush: '$(Build.ArtifactStagingDirectory)/**/$(PackageName).*.nupkg;!$(Build.ArtifactStagingDirectory)/**/$(PackageName).*.symbols.nupkg'
              nuGetFeedType: external
              publishFeedCredentials: nuget.org